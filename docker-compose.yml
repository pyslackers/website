services:
  web:
    image: pyslackers/website:dev
    build: .
    depends_on:
      redis:
        condition: service_started
      postgresql:
        condition: service_healthy
    environment:
      REDIS_URL: "redis://redis:6379/0"
      DATABASE_URL: "postgresql://pyslackersweb:pyslackersweb@postgresql:5432/pyslackersweb_dev"
      SLACK_INVITE_TOKEN: "${SLACK_INVITE_TOKEN}"
      SLACK_TOKEN: "${SLACK_TOKEN}"
    ports:
      - "8000:8000"
    volumes:
      - "${PWD}:/app"
      - tox-data:/app/.tox
    command: "/bin/sh -c 'alembic upgrade head && gunicorn pyslackersweb:app_factory --access-logfile - --bind=0.0.0.0:8000 --worker-class=aiohttp.GunicornWebWorker --reload'"

  redis:
    image: redis:5-alpine
    ports:
      - 6379:6379

  postgresql:
    image: postgres:11
    ports:
      - 5435:5432
    env_file:
      - env-postgresql.env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "pyslackersweb", "-d", "pyslackersweb_dev"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  tox-data: {}
