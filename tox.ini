[tox]
envlist =
    setup-services,
    py38-test,
    py312-{test,lint,mypy},
    teardown-services
skipsdist = true
minversion = 4.11.0

[testenv]
base_python =
    py38: python3.8
    py312: python3.12
allowlist_externals =
    docker
    alembic
install_command = pip install {opts} {packages}

[testenv:py{38,312}-test]
deps =
    -r requirements/testing.txt
    -r requirements/base.txt
    -r requirements/development.txt
passenv =
    DATABASE_URL
    REDIS_URL
    PYTHONPATH
commands =
    alembic upgrade head

    # Run tests with explicit path and additional verbosity
    python -m pytest --tb=short --durations=10 --cov=pyslackersweb/ --cov-report=term-missing --cov-report=term --junit-xml={envdir}/artifacts/test-results.xml {posargs:tests/}
depends =
    setup_services

[testenv:py312-lint]
deps =
    black>=24.1.1
    pylint==2.8.2
ignore_outcome = true
commands =
    black --check --target-version py310 .
    pylint pyslackersweb tests migrations

[testenv:py312-mypy]
deps =
    mypy>=1.8.0
commands =
    mypy . --ignore-missing-imports --install-types

[testenv:autoformat]
deps =
    black>=24.1.1
commands =
    black --target-version py310 .

[testenv:setup-services]
skip_install = true
deps =
    -r requirements/testing.txt
passenv =
    DATABASE_URL
    REDIS_URL
setenv =
    DATABASE_URL = postgresql://pyslackers:pyslackers@db:5432/pyslackers
    REDIS_URL = redis://localhost:6379/0
commands =
    docker compose --project-name pyslackersweb-test up --build -d postgresql redis
    docker compose --project-name pyslackersweb-test exec postgresql bash -c 'until pg_isready -U pyslackersweb; do sleep 1; done;'
    docker compose --project-name pyslackersweb-test up --build -d web


[testenv:teardown-services]
skip_install = true
commands =
    docker compose down -v --remove-orphans
depends =
    py38-test
    py312-test
