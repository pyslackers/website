[tox]
requires =
    tox>=4.24.1
    tox-uv>=1.21.1
envlist =
    setup_services,
    py312-{test,lint,mypy},
    teardown_services
skipsdist = true
minversion = 4.11.0

[testenv]
runner = uv-venv-lock-runner
base_python = python3.12
allowlist_externals =
    docker
    alembic

[testenv:py312-test]
groups = test
passenv =
    DATABASE_URL
    REDIS_URL
    PYTHONPATH
commands =
    alembic upgrade head

    # Run tests with explicit path and additional verbosity
    python -m pytest --tb=short --durations=10 --cov=pyslackersweb/ --cov-report=term-missing --cov-report=term --junit-xml={envdir}/artifacts/test-results.xml {posargs:tests/}
depends =
    setup_services

[testenv:py312-lint]
groups = lint
ignore_outcome = true
commands =
    black --check --target-version py312 .
    pylint pyslackersweb tests migrations

[testenv:py312-mypy]
groups = typing
commands =
    mypy . --ignore-missing-imports --install-types --non-interactive

[testenv:autoformat]
base_python = python3.12
groups = lint
commands =
    black --target-version py312 .

[testenv:setup_services]
base_python = python3
skip_install = true
allowlist_externals = docker
passenv =
    DATABASE_URL
    REDIS_URL
setenv =
    DATABASE_URL = postgresql://pyslackers:pyslackers@db:5432/pyslackers
    REDIS_URL = redis://localhost:6379/0
commands =
    docker compose --project-name pyslackersweb-test up --build -d postgresql redis
    docker compose --project-name pyslackersweb-test exec postgresql bash -c 'until pg_isready -U pyslackersweb; do sleep 1; done;'
    docker compose --project-name pyslackersweb-test up --build -d web


[testenv:teardown_services]
base_python = python3
skip_install = true
allowlist_externals = docker
commands =
    docker compose down -v --remove-orphans
depends =
    py312-test

[testenv:gen-requirements]
base_python = python3.12
skip_install = true
allowlist_externals = 
    uv
    sh
commands =
    sh -c "uv export --no-hashes --format requirements-txt > requirements.txt"
